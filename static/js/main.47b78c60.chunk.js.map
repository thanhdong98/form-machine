{"version":3,"sources":["shared/types/FormControlType.ts","shared/types/FormFieldType.ts","components/AddControlButton/AddControlButton.tsx","components/Tooltip/Tooltip.tsx","shared/constants/ControlValueDefault.ts","shared/icons/DownArrow.tsx","shared/icons/Plus.tsx","shared/icons/UpArrow.tsx","shared/icons/Trash.tsx","shared/icons/Download.tsx","shared/icons/Save.tsx","shared/types/FormBuilderContext.ts","components/ActionPopover/ActionPopover.tsx","shared/constants/ValidFormFields.ts","components/FormFieldEditor/FormChildrenFieldEditor.tsx","components/FormFieldEditor/FormValueFieldEditor.tsx","components/FormFieldEditor/FormFieldEditor.tsx","containers/Toolbox/ToolboxItem.tsx","containers/Toolbox/Toolbox.tsx","components/FormControlParser/Checboxs.tsx","components/FormControlParser/FormControlParser.tsx","shared/utils/getFormValue.ts","containers/FormGenerator/FormGenerator.tsx","containers/FormBuilder/FormBuilder.tsx","shared/utils/parseTemplate.ts","samples/FormGeneratorSample.tsx","samples/Sample.tsx","index.tsx"],"names":["ControlType","InputFieldType","FormFieldType","AddControlButton","onAdd","children","useState","showControls","toggleShowControl","Button","as","variant","className","onClick","onMouseLeave","style","zIndex","top","right","width","transition","height","Object","values","map","control","Tooltip","placement","text","OverlayTrigger","delay","show","hide","overlay","FormControlDefaultValue","Checkbox","controlType","defaultValue","disabled","label","Radio","Input","placeholder","TextArea","value","Select","Section","bordered","DownArrow","x","y","viewBox","enableBackground","d","Plus","fill","UpArrow","Trash","Download","Save","FormBuilderContext","createContext","schema","setSchema","onSave","ActionPopover","onDelete","onMove","showAdd","toggleShowAdd","bottom","ValidFormFields","type","columns","FormChildrenFieldEditor","formControlItem","editFormItem","addChild","afterId","newItem","id","v4","afterIndex","findIndex","item","splice","deleteChild","filter","editChild","editingFormItem","itemIndex","isUp","index","swappedIndex","tempItem","length","Accordion","flush","formItem","addFormItem","deleteFormItem","FormValueFields","onChange","onChangeField","e","i","target","val","Row","Col","md","Form","Control","name","onDeleteField","size","FormFieldEditor","useCallback","includes","checked","FormFieldLabels","FormFieldInputs","useMemo","Check","defaultChecked","toString","FormValueFieldEditor","field","formField","Group","Label","ToolboxItem","showAction","toggleShowAction","Item","eventKey","onMouseEnter","Header","Body","Toolbox","useContext","element","document","createElement","textFile","Blob","JSON","stringify","href","URL","createObjectURL","download","body","appendChild","click","Checkboxs","setValue","inline","onChecke","FormControlParser","rest","component","rows","opt","Card","getFormLabel","list","res","getFormValue","formValue","result","entries","forEach","FormGenerator","onSubmit","onSubmitForm","preventDefault","formData","FormData","formDataObj","fromEntries","formResult","FormBuilder","formSchema","setFormSchema","Provider","parseTemplate","templateStr","parse","err","console","log","FormGeneratorSample","fileInput","display","onchange","file","files","reader","FileReader","onload","event","contents","alert","removeChild","readAsText","Sample","isFormBuilder","toggleShowFormBuilder","data","datetime","date","time","password","number","Container","template","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.47b78c60.chunk.js","sourcesContent":["export enum ControlType {\r\n  Input = \"Input\",\r\n  Checkbox = \"Checkbox\",\r\n  Radio = \"Radio\",\r\n  Select = \"Select\",\r\n  TextArea = \"TextArea\",\r\n  Section = \"Section\"\r\n}\r\n\r\nexport enum InputFieldType {\r\n  number = \"number\",\r\n  text = \"text\",\r\n  password = \"password\",\r\n  time = \"time\",\r\n  date = \"date\",\r\n  datetime =\"datetime-local\"\r\n}\r\n\r\n\r\ninterface FormControlType {\r\n  id?: string;\r\n  controlType: ControlType;\r\n  label?: string;\r\n  value?: string | boolean | number | string[];\r\n  placeholder?: string;\r\n  defaultValue?: string | number | string[];\r\n  values?: string[];\r\n  disabled?: boolean;\r\n  type?: InputFieldType;\r\n  columns?: 1 | 2 | 3 | 4 | 6;\r\n  children?: FormControlType[];\r\n  bordered?: boolean;\r\n}\r\n\r\nexport type { FormControlType };\r\n","export enum FormFieldType {\r\n  controlType = \"controlType\",\r\n  label = \"label\",\r\n  value = \"value\",\r\n  placeholder = \"placeholder\",\r\n  defaultValue = \"defaultValue\",\r\n  values = \"values\",\r\n  disabled = \"disabled\",\r\n  type = \"type\",\r\n  columns = \"columns\",\r\n  children = \"children\",\r\n  bordered = \"bordered\"\r\n}\r\n","import { FC, ReactNode, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { ControlType } from \"shared/types/FormControlType\";\r\n\r\nconst AddControlButton: FC<{ onAdd: (controlType: ControlType) => void; children: ReactNode }> = ({\r\n  onAdd,\r\n  children\r\n}) => {\r\n  const [showControls, toggleShowControl] = useState(false);\r\n\r\n  return (\r\n    <Button\r\n      as=\"div\"\r\n      variant=\"success\"\r\n      className=\"w-100 position-relative\"\r\n      onClick={() => toggleShowControl(true)}\r\n      onMouseLeave={() => toggleShowControl(false)}\r\n    >\r\n      {showControls && (\r\n        <div\r\n          className=\"position-absolute d-flex flex-wrap justify-content-start overflow-hidden bg-white\"\r\n          style={{\r\n            zIndex: 999,\r\n            top: \"calc(100% + 1px)\",\r\n            right: 0,\r\n            width: \"auto\",\r\n            transition: \"height 0.25s ease-in-out\",\r\n            height: 100\r\n          }}\r\n        >\r\n          {Object.values(ControlType).map((control: ControlType) => (\r\n            <Button onClick={() => onAdd(control)} className=\"h-50 w-25\" variant=\"outline-primary\" key={`action-${control}`}>\r\n              {control}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AddControlButton;\r\n","import { FC, ReactElement } from \"react\";\r\nimport { OverlayTrigger, Tooltip as BootstrapTooltip } from \"react-bootstrap\";\r\nimport { Placement } from \"react-bootstrap/esm/types\";\r\n\r\nconst Tooltip: FC<{ children: ReactElement; placement?: Placement; text: string }> = ({\r\n  children,\r\n  placement = \"top\",\r\n  text\r\n}) => {\r\n  return (\r\n    <OverlayTrigger\r\n      placement={placement}\r\n      delay={{ show: 500, hide: 500 }}\r\n      overlay={<BootstrapTooltip>{text}</BootstrapTooltip>}\r\n    >\r\n      {children}\r\n    </OverlayTrigger>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import { ControlType, FormControlType } from \"../types/FormControlType\";\r\n\r\nconst CheckboxDefaultValue: FormControlType = {\r\n  controlType: ControlType.Checkbox,\r\n  defaultValue: [],\r\n  values: [],\r\n  disabled: false,\r\n  label: \"\"\r\n};\r\n\r\nconst RadioDefaultValue: FormControlType = {\r\n  controlType: ControlType.Radio,\r\n  values: [],\r\n  disabled: false,\r\n  label: \"\"\r\n};\r\n\r\nconst InputDefaultValue: FormControlType = {\r\n  controlType: ControlType.Input,\r\n  defaultValue: \"\",\r\n  disabled: false,\r\n  label: \"\",\r\n  placeholder: \"\"\r\n};\r\n\r\nconst TextAreaDefaultValue: FormControlType = {\r\n  controlType: ControlType.TextArea,\r\n  value: \"\",\r\n  values: [],\r\n  disabled: false,\r\n  label: \"\"\r\n};\r\n\r\nconst SelectDefaultValue: FormControlType = {\r\n  controlType: ControlType.Select,\r\n  values: [],\r\n  disabled: false,\r\n  label: \"\"\r\n};\r\n\r\nconst SectionDefaultValue: FormControlType = {\r\n  controlType: ControlType.Section,\r\n  children: [],\r\n  label: \"\",\r\n  bordered: false\r\n};\r\n\r\nconst FormControlDefaultValue: Record<ControlType, FormControlType> = {\r\n  Checkbox: CheckboxDefaultValue,\r\n  Radio: RadioDefaultValue,\r\n  Input: InputDefaultValue,\r\n  TextArea: TextAreaDefaultValue,\r\n  Select: SelectDefaultValue,\r\n  Section: SectionDefaultValue\r\n};\r\n\r\nexport default FormControlDefaultValue;\r\n","import { FC } from \"react\";\r\n\r\nconst DownArrow: FC<{ width?: string | number; height?: string | number }> = ({ width, height }) => (\r\n  <svg\r\n    width={width}\r\n    height={height}\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    viewBox=\"0 0 123.97 123.97\"\r\n    enableBackground=\"new 0 0 123.97 123.97\"\r\n  >\r\n    <g>\r\n      <path d=\"M51.802,96.062c2.801,2.801,6.5,4.2,10.2,4.2s7.4-1.399,10.2-4.2l47.3-47.3c5.5-5.5,6.101-14.6,0.8-20.3c-5.6-6.1-15.1-6.3-20.899-0.5l-30.4,30.3c-3.899,3.9-10.2,3.9-14.1,0l-30.3-30.3c-5.801-5.8-15.301-5.7-20.9,0.5c-5.3,5.7-4.8,14.8,0.8,20.3L51.802,96.062z\" />\r\n    </g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n  </svg>\r\n);\r\n\r\nexport default DownArrow;\r\n","import { FC } from \"react\";\r\n\r\nconst Plus: FC<{ width?: string | number; height?: string | number; fill?: string }> = ({\r\n  width,\r\n  height,\r\n  fill = \"white\"\r\n}) => (\r\n  <svg height={height} viewBox=\"0 0 448 448\" width={width} fill={fill}>\r\n    <path d=\"m408 184h-136c-4.417969 0-8-3.582031-8-8v-136c0-22.089844-17.910156-40-40-40s-40 17.910156-40 40v136c0 4.417969-3.582031 8-8 8h-136c-22.089844 0-40 17.910156-40 40s17.910156 40 40 40h136c4.417969 0 8 3.582031 8 8v136c0 22.089844 17.910156 40 40 40s40-17.910156 40-40v-136c0-4.417969 3.582031-8 8-8h136c22.089844 0 40-17.910156 40-40s-17.910156-40-40-40zm0 0\" />\r\n  </svg>\r\n);\r\n\r\nexport default Plus;\r\n","import { FC } from \"react\";\r\n\r\nconst UpArrow: FC<{ width?: string | number; height?: string | number }> = ({ width, height }) => (\r\n  <svg\r\n    width={width}\r\n    height={height}\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    viewBox=\"0 0 123.969 123.97\"\r\n    enableBackground=\"new 0 0 123.969 123.97\"\r\n  >\r\n    <g>\r\n      <path d=\"M120.266,95.584c5.301-5.801,4.801-14.801-0.8-20.301l-47.3-47.4c-2.8-2.8-6.5-4.2-10.2-4.2s-7.399,1.4-10.2,4.2l-47.299,47.3c-5.5,5.5-6.1,14.6-0.8,20.3c5.6,6.101,15.099,6.3,20.9,0.5l30.3-30.3c3.899-3.9,10.2-3.9,14.1,0l30.3,30.3C105.167,101.883,114.667,101.684,120.266,95.584z\" />\r\n    </g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n  </svg>\r\n);\r\n\r\nexport default UpArrow;\r\n","import { FC } from \"react\";\r\n\r\nconst Trash: FC<{ width?: string | number; height?: string | number; fill?: string }> = ({\r\n  width,\r\n  height,\r\n  fill = \"white\"\r\n}) => (\r\n  <svg enableBackground=\"new 0 0 512 512\" height={height} viewBox=\"0 0 512 512\" width={width} fill={fill}>\r\n    <g>\r\n      <path d=\"m424 64h-88v-16c0-26.51-21.49-48-48-48h-64c-26.51 0-48 21.49-48 48v16h-88c-22.091 0-40 17.909-40 40v32c0 8.837 7.163 16 16 16h384c8.837 0 16-7.163 16-16v-32c0-22.091-17.909-40-40-40zm-216-16c0-8.82 7.18-16 16-16h64c8.82 0 16 7.18 16 16v16h-96z\" />\r\n      <path d=\"m78.364 184c-2.855 0-5.13 2.386-4.994 5.238l13.2 277.042c1.22 25.64 22.28 45.72 47.94 45.72h242.98c25.66 0 46.72-20.08 47.94-45.72l13.2-277.042c.136-2.852-2.139-5.238-4.994-5.238zm241.636 40c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16z\" />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default Trash;\r\n","import { FC } from \"react\";\r\n\r\nconst Download: FC<{ width?: string | number; height?: string | number; fill?: string }> = ({\r\n  width,\r\n  height,\r\n  fill = \"white\"\r\n}) => (\r\n  <svg height={height} width={width} fill={fill} enableBackground=\"new 0 0 24 24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"m12 16c-.205 0-.401-.084-.542-.232l-5.25-5.5c-.455-.476-.117-1.268.542-1.268h2.75v-5.75c0-.689.561-1.25 1.25-1.25h2.5c.689 0 1.25.561 1.25 1.25v5.75h2.75c.659 0 .997.792.542 1.268l-5.25 5.5c-.141.148-.337.232-.542.232z\" />\r\n    <path d=\"m22.25 22h-20.5c-.965 0-1.75-.785-1.75-1.75v-.5c0-.965.785-1.75 1.75-1.75h20.5c.965 0 1.75.785 1.75 1.75v.5c0 .965-.785 1.75-1.75 1.75z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Download;\r\n","import { FC } from \"react\";\r\n\r\nconst Save: FC<{ width?: string | number; height?: string | number }> = ({ width, height }) => (\r\n  <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" enableBackground=\"new 0 0 512 512\" width={width} height={height}>\r\n    <g>\r\n      <path d=\"M493.254,77.255l-58.508-58.51C422.742,6.742,406.465,0,389.49,0H352v112c0,8.836-7.164,16-16,16H80c-8.836,0-16-7.164-16-16V0H32C14.328,0,0,14.326,0,32v448c0,17.673,14.328,32,32,32h448c17.672,0,32-14.327,32-32V122.51C512,105.535,505.258,89.257,493.254,77.255z M448,448H64V256h384V448z\" />\r\n      <rect x=\"224\" width=\"64\" height=\"96\" />\r\n    </g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n  </svg>\r\n);\r\n\r\nexport default Save;\r\n","import { createContext } from \"react\";\r\nimport { FormControlType } from \"./FormControlType\";\r\n\r\nexport type FormBuilderContextType = {\r\n  schema: FormControlType[];\r\n  setSchema: (schema: FormControlType[]) => void;\r\n  onSave?: () => void;\r\n};\r\n\r\nexport const FormBuilderContext = createContext<FormBuilderContextType>({\r\n  schema: [],\r\n  setSchema: (schema: FormControlType[]) => {},\r\n  onSave: () => {}\r\n});\r\n\r\nexport default FormBuilderContext;\r\n","import Tooltip from \"components/Tooltip\";\r\nimport { FC, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { DownArrow, Plus, Trash, UpArrow } from \"shared/icons\";\r\nimport { ControlType } from \"shared/types/FormControlType\";\r\n\r\nconst ActionPopover: FC<{\r\n  show: boolean;\r\n  onAdd: (element: ControlType) => void;\r\n  onDelete: () => void;\r\n  onMove: (isUp?: boolean) => void;\r\n}> = ({ show = false, onAdd, onDelete, onMove }) => {\r\n  const [showAdd, toggleShowAdd] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      onMouseLeave={() => toggleShowAdd(false)}\r\n      className=\"position-absolute d-flex flex-wrap justify-content-start overflow-hidden bg-white\"\r\n      style={{\r\n        zIndex: 999,\r\n        bottom: \"calc(100% + 1px)\",\r\n        right: 0,\r\n        width: \"auto\",\r\n        transition: \"height 0.25s ease-in-out\",\r\n        height: show ? (showAdd ? 100 : 50) : 0\r\n      }}\r\n    >\r\n      {showAdd ? (\r\n        <>\r\n          {Object.values(ControlType).map((control: ControlType) => (\r\n            <Button onClick={() => onAdd(control)} className=\"h-50 w-25\" variant=\"outline-primary\" key={`action-${control}`}>\r\n              {control}\r\n            </Button>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Tooltip text=\"Add item\">\r\n            <Button variant=\"success\" className=\"h-100\" onClick={() => toggleShowAdd(true)}>\r\n              <Plus height={25} />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip text=\"Move up\">\r\n            <Button variant=\"outline-info\" className=\"h-100\" onClick={() => onMove(true)}>\r\n              <UpArrow height={25} />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip text=\"Move down\">\r\n            <Button variant=\"outline-info\" className=\"h-100\" onClick={() => onMove()}>\r\n              <DownArrow height={25} />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip text=\"Delete item\">\r\n            <Button variant=\"danger\" className=\"h-100\" onClick={onDelete}>\r\n              <Trash height={25} />\r\n            </Button>\r\n          </Tooltip>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionPopover;\r\n","import { ControlType } from \"shared/types/FormControlType\";\r\nimport { FormFieldType } from \"shared/types/FormFieldType\";\r\n\r\nconst ValidFormFields: Record<ControlType, FormFieldType[]> = {\r\n  Input: [\r\n    FormFieldType.controlType,\r\n    FormFieldType.type,\r\n    FormFieldType.label,\r\n    FormFieldType.placeholder,\r\n    FormFieldType.defaultValue,\r\n    FormFieldType.disabled\r\n  ],\r\n  Checkbox: [\r\n    FormFieldType.controlType,\r\n    FormFieldType.label,\r\n    FormFieldType.defaultValue,\r\n    FormFieldType.values,\r\n    FormFieldType.disabled\r\n  ],\r\n  Radio: [\r\n    FormFieldType.controlType,\r\n    FormFieldType.label,\r\n    FormFieldType.defaultValue,\r\n    FormFieldType.values,\r\n    FormFieldType.disabled\r\n  ],\r\n  Select: [\r\n    FormFieldType.controlType,\r\n    FormFieldType.label,\r\n    FormFieldType.defaultValue,\r\n    FormFieldType.values,\r\n    FormFieldType.disabled\r\n  ],\r\n  TextArea: [FormFieldType.controlType, FormFieldType.label, FormFieldType.defaultValue, FormFieldType.disabled],\r\n  Section: [FormFieldType.label, FormFieldType.columns, FormFieldType.bordered, FormFieldType.children]\r\n};\r\n\r\nexport default ValidFormFields;\r\n","import AddControlButton from \"components/AddControlButton\";\r\nimport FormControlDefaultValue from \"shared/constants/ControlValueDefault\";\r\nimport ToolboxItem from \"containers/Toolbox/ToolboxItem\";\r\nimport { FC } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport { ControlType, FormControlType } from \"shared/types/FormControlType\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst FormChildrenFieldEditor: FC<{ formControlItem: FormControlType; editFormItem: (item: FormControlType) => void }> =\r\n  ({ formControlItem, editFormItem }) => {\r\n    const { children = [] } = formControlItem;\r\n    const addChild = (type: ControlType, afterId?: string) => {\r\n      const newItem = { ...FormControlDefaultValue[type], id: v4() };\r\n      if (afterId) {\r\n        const afterIndex = children.findIndex((item: FormControlType) => item.id === afterId);\r\n        children.splice(afterIndex + 1, 0, newItem);\r\n        editFormItem({ ...formControlItem, children: [...children] });\r\n      } else editFormItem({ ...formControlItem, children: [...children, newItem] });\r\n    };\r\n\r\n    const deleteChild = (id: string) =>\r\n      editFormItem({ ...formControlItem, children: children.filter((item: FormControlType) => item.id !== id) });\r\n\r\n    const editChild = (editingFormItem: FormControlType) => {\r\n      if (editingFormItem) {\r\n        const itemIndex = children.findIndex((item) => item.id === editingFormItem.id);\r\n        children[itemIndex] = editingFormItem;\r\n\r\n        editFormItem({ ...formControlItem, children: [...children] });\r\n      }\r\n    };\r\n\r\n    const onMove = (id: string, isUp?: boolean) => {\r\n      const index = children.findIndex((item) => item.id === id);\r\n      const swappedIndex = isUp ? index - 1 : index + 1;\r\n\r\n      const tempItem = children[swappedIndex];\r\n\r\n      if (tempItem) {\r\n        children[swappedIndex] = children[index];\r\n        children[index] = tempItem;\r\n        editFormItem({ ...formControlItem, children: [...children] });\r\n      }\r\n    };\r\n\r\n    return formControlItem.children?.length ? (\r\n      <Accordion flush={false}>\r\n        {formControlItem.children?.map((formItem: FormControlType) => (\r\n          <ToolboxItem\r\n            key={`toolbox-${formItem.id}`}\r\n            addFormItem={addChild}\r\n            deleteFormItem={deleteChild}\r\n            editFormItem={editChild}\r\n            formItem={formItem}\r\n            onMove={onMove}\r\n          />\r\n        ))}\r\n      </Accordion>\r\n    ) : (\r\n      <AddControlButton onAdd={addChild}> Add Child </AddControlButton>\r\n    );\r\n  };\r\n\r\nexport default FormChildrenFieldEditor;\r\n","import { FC } from \"react\";\r\nimport { Col, Form, Row, Button } from \"react-bootstrap\";\r\n\r\nconst FormValueFields: FC<{ values?: string[]; onChange: (value: string[]) => void }> = ({ values = [], onChange }) => {\r\n  const onChangeField = (e: any, i: number) => {\r\n    values[i] = e.target.value;\r\n    onChange([...values]);\r\n  };\r\n\r\n  const onAddField = () => {\r\n    onChange([...values, \"\"]);\r\n  };\r\n\r\n  const onDeleteField = (index: number) => {\r\n    values.splice(index, 1);\r\n    onChange([...values]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {values.map((val: string, index: number) => (\r\n        <Row className=\"mb-2\" key={`val-${index}`}>\r\n          <Col md={9}>\r\n            <Form.Control type=\"text\" value={val} onChange={(e) => onChangeField(e, index)} name=\"defaultValue\" />\r\n          </Col>\r\n          <Col md={3}>\r\n            <Button className=\"w-100 h-100\" variant=\"danger\" onClick={() => onDeleteField(index)} size=\"sm\">\r\n              <i className=\"fa fa-trash\"></i>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      ))}\r\n      <Row>\r\n        <Col md={6} onClick={onAddField}>\r\n          <Button variant=\"success\" className=\"w-100\" size=\"lg\">\r\n            Add Field\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormValueFields;\r\n","import ValidFormFields from \"shared/constants/ValidFormFields\";\r\nimport { FC, ReactElement, useCallback, useMemo } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { ControlType, FormControlType, InputFieldType } from \"shared/types/FormControlType\";\r\nimport { FormFieldType } from \"shared/types/FormFieldType\";\r\nimport FormChildrenFieldEditor from \"./FormChildrenFieldEditor\";\r\nimport FormValueFieldEditor from \"./FormValueFieldEditor\";\r\n\r\nconst FormFieldEditor: FC<{ formControlItem: FormControlType; editFormItem: (formItem: FormControlType) => void }> = ({\r\n  formControlItem,\r\n  editFormItem\r\n}) => {\r\n  const onChange = useCallback(\r\n    (e: any) => {\r\n      editFormItem({\r\n        ...formControlItem,\r\n        [e.target.name]: [\"disabled\", \"bordered\"].includes(e.target.name) ? e.target.checked : e.target.value\r\n      });\r\n    },\r\n    [formControlItem, editFormItem]\r\n  );\r\n\r\n  const FormFieldLabels: Record<FormFieldType, string> = {\r\n    disabled: \"Disable\",\r\n    controlType: \"Element Type\",\r\n    label: \"Title\",\r\n    placeholder: \"Placholder\",\r\n    defaultValue: \"Default Value(s)\",\r\n    values: \"Values\",\r\n    value: \"Value\",\r\n    type: \"Type\",\r\n    columns: \"Columns\",\r\n    children: \"Control Items\",\r\n    bordered: \"Contain Border\"\r\n  };\r\n\r\n  const FormFieldInputs: Record<FormFieldType, ReactElement> = useMemo(\r\n    () => ({\r\n      disabled: (\r\n        <Form.Check\r\n          label=\"Disabled\"\r\n          defaultChecked={formControlItem.disabled}\r\n          name=\"disabled\"\r\n          id={`disabledField-${formControlItem.id}`}\r\n          onChange={onChange}\r\n        />\r\n      ),\r\n      controlType: (\r\n        <Form.Select defaultValue={formControlItem.controlType} onChange={onChange} name=\"controlType\">\r\n          {Object.values(ControlType).map((item: ControlType) => (\r\n            <option value={item} key={`controlType-${formControlItem.id}-${item}`}>\r\n              {item.toString()}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      ),\r\n      label: (\r\n        <Form.Control type=\"text\" placeholder=\"Title\" value={formControlItem.label} onChange={onChange} name=\"label\" />\r\n      ),\r\n      placeholder: (\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"placeholder\"\r\n          value={formControlItem.placeholder}\r\n          onChange={onChange}\r\n          name=\"placeholder\"\r\n        />\r\n      ),\r\n      defaultValue: (\r\n        <Form.Control\r\n          type={formControlItem.controlType === ControlType.Input ? formControlItem.type : \"text\"}\r\n          placeholder=\"Default Value\"\r\n          value={formControlItem.defaultValue}\r\n          onChange={onChange}\r\n          name=\"defaultValue\"\r\n        />\r\n      ),\r\n      values: (\r\n        <FormValueFieldEditor\r\n          values={formControlItem.values}\r\n          onChange={(values: string[]) =>\r\n            editFormItem({\r\n              ...formControlItem,\r\n              values: values\r\n            })\r\n          }\r\n        />\r\n      ),\r\n      type: (\r\n        <Form.Select onChange={onChange} value={formControlItem.type} name=\"type\">\r\n          {Object.values(InputFieldType).map((field: string) => (\r\n            <option key={`type-${formControlItem.id}-${field}`} value={field}>\r\n              {field}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      ),\r\n      value: <div>not implement yet</div>,\r\n      children: <FormChildrenFieldEditor editFormItem={editFormItem} formControlItem={formControlItem} />,\r\n      columns: (\r\n        <Form.Select size=\"sm\" onChange={onChange} value={formControlItem.columns} name=\"columns\">\r\n          {[1, 2, 3, 4, 6].map((val) => (\r\n            <option key={`columns-${formControlItem.id}-${val}`} value={val}>\r\n              {val}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      ),\r\n      bordered: (\r\n        <Form.Check\r\n          label=\"Bordered\"\r\n          defaultChecked={formControlItem.bordered}\r\n          name=\"bordered\"\r\n          id={`borderedField-${formControlItem.id}`}\r\n          onChange={onChange}\r\n        />\r\n      )\r\n    }),\r\n    [formControlItem, onChange, editFormItem]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {ValidFormFields[formControlItem.controlType].map((formField: FormFieldType) => (\r\n        <Form.Group key={`group-${formControlItem.id}-${formField}`} className=\"mb-2\">\r\n          <Form.Label>{FormFieldLabels[formField]}</Form.Label>\r\n          {FormFieldInputs[formField]}\r\n        </Form.Group>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormFieldEditor;\r\n","import ActionPopover from \"components/ActionPopover\";\r\nimport FormFieldEditor from \"components/FormFieldEditor\";\r\nimport { FC, useState } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport { ControlType, FormControlType } from \"shared/types/FormControlType\";\r\n\r\nconst ToolboxItem: FC<{\r\n  formItem: FormControlType;\r\n  addFormItem: (item: ControlType, afterId?: string) => void;\r\n  deleteFormItem: (id: string) => void;\r\n  editFormItem: (item: FormControlType) => void;\r\n  onMove: (id: string, isUp?: boolean) => void;\r\n}> = ({ formItem, addFormItem, deleteFormItem, editFormItem, onMove }) => {\r\n  const [showAction, toggleShowAction] = useState(false);\r\n\r\n  return (\r\n    <Accordion.Item\r\n      eventKey={formItem.id || \"\"}\r\n      key={formItem.id}\r\n      className=\"position-relative\"\r\n      onMouseEnter={() => {\r\n        toggleShowAction(true);\r\n      }}\r\n      onMouseLeave={() => toggleShowAction(false)}\r\n    >\r\n      <ActionPopover\r\n        show={showAction}\r\n        onAdd={(control: ControlType) => {\r\n          addFormItem(control, formItem.id);\r\n          toggleShowAction(false);\r\n        }}\r\n        onDelete={() => {\r\n          deleteFormItem(formItem?.id || \"\");\r\n          toggleShowAction(false);\r\n        }}\r\n        onMove={(isUp?: boolean) => {\r\n          onMove(formItem?.id || \"\", isUp);\r\n          toggleShowAction(false);\r\n        }}\r\n      />\r\n      <Accordion.Header>\r\n        {formItem?.controlType} : {formItem?.label}\r\n      </Accordion.Header>\r\n      <Accordion.Body>\r\n        <FormFieldEditor formControlItem={formItem} editFormItem={editFormItem} />\r\n      </Accordion.Body>\r\n    </Accordion.Item>\r\n  );\r\n};\r\n\r\nexport default ToolboxItem;\r\n","import AddControlButton from \"components/AddControlButton\";\r\nimport Tooltip from \"components/Tooltip\";\r\nimport FormControlDefaultValue from \"shared/constants/ControlValueDefault\";\r\nimport { FC, useContext } from \"react\";\r\nimport { Accordion, Col, Row, Button } from \"react-bootstrap\";\r\nimport { Download, Save } from \"shared/icons\";\r\nimport FormBuilderContext from \"shared/types/FormBuilderContext\";\r\nimport { ControlType, FormControlType } from \"shared/types/FormControlType\";\r\nimport { v4 } from \"uuid\";\r\nimport ToolboxItem from \"./ToolboxItem\";\r\n\r\nconst Toolbox: FC = () => {\r\n  const { schema, setSchema, onSave } = useContext(FormBuilderContext);\r\n\r\n  const addFormItem = (type: ControlType, afterId = \"\") => {\r\n    if (afterId) {\r\n      const afterIndex = schema.findIndex((formItem: FormControlType) => formItem.id === afterId);\r\n      schema.splice(afterIndex + 1, 0, { ...FormControlDefaultValue[type], id: v4() });\r\n      setSchema([...schema]);\r\n    } else setSchema([...schema, { ...FormControlDefaultValue[type], id: v4() }]);\r\n  };\r\n\r\n  const deleteFormItem = (id: string) => setSchema(schema.filter((item: FormControlType) => item.id !== id));\r\n\r\n  const editFormItem = (editingFormItem: FormControlType) => {\r\n    if (editingFormItem) {\r\n      const itemIndex = schema.findIndex((item) => item.id === editingFormItem.id);\r\n      schema[itemIndex] = editingFormItem;\r\n\r\n      setSchema([...schema]);\r\n    }\r\n  };\r\n\r\n  const onMove = (id: string, isUp?: boolean) => {\r\n    const index = schema.findIndex((item) => item.id === id);\r\n    const swappedIndex = isUp ? index - 1 : index + 1;\r\n\r\n    const tempItem = schema[swappedIndex];\r\n\r\n    if (tempItem) {\r\n      schema[swappedIndex] = schema[index];\r\n      schema[index] = tempItem;\r\n      setSchema([...schema]);\r\n    }\r\n  };\r\n\r\n  const downloadTemplate = () => {\r\n    const element = document.createElement(\"a\");\r\n    const textFile = new Blob([JSON.stringify(schema)], { type: \"text/json\" }); //pass data from localStorage API to blob\r\n    element.href = URL.createObjectURL(textFile);\r\n    element.download = \"formTemplates.json\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  };\r\n\r\n  return schema.length ? (\r\n    <>\r\n      <Row className=\"justify-content-between mb-3\">\r\n        <Col>\r\n          <h1>Edit</h1>\r\n        </Col>\r\n        <Col md={2} className=\"d-flex align-items-center\">\r\n          <Tooltip text=\"Download template\">\r\n            <Button variant=\"outline-info\" className=\"w-100\" onClick={downloadTemplate}>\r\n              <Download height=\"100%\" />\r\n            </Button>\r\n          </Tooltip>\r\n        </Col>\r\n        <Col md={2} className=\"d-flex align-items-center\">\r\n          <Tooltip text=\"Save template\">\r\n            <Button variant=\"outline-info\" className=\"w-100\" onClick={onSave}>\r\n              <Save height=\"100%\" />\r\n            </Button>\r\n          </Tooltip>\r\n        </Col>\r\n      </Row>\r\n      <Accordion flush={false}>\r\n        {schema.map((formItem: FormControlType) => (\r\n          <ToolboxItem\r\n            key={`toolbox-${formItem.id}`}\r\n            addFormItem={addFormItem}\r\n            deleteFormItem={deleteFormItem}\r\n            editFormItem={editFormItem}\r\n            formItem={formItem}\r\n            onMove={onMove}\r\n          />\r\n        ))}\r\n      </Accordion>\r\n    </>\r\n  ) : (\r\n    <AddControlButton onAdd={addFormItem}> Add Items </AddControlButton>\r\n  );\r\n};\r\n\r\nexport default Toolbox;\r\n","import { FC, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst Checkboxs: FC<{ id?: string; defaultValue: string[]; disabled?: boolean; values: string[] }> = ({\r\n  id = \"\",\r\n  defaultValue,\r\n  disabled = false,\r\n  values = []\r\n}) => {\r\n  const [value, setValue] = useState<string[]>(defaultValue);\r\n\r\n  const onChecke = (checked: boolean, val: string) => {\r\n    if (checked) {\r\n      setValue([...value, val]);\r\n    } else {\r\n      setValue(value.filter((x) => x !== val));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Form.Control type=\"hidden\" name={id} value={value} />\r\n      {values.map((val: string, index: number) => (\r\n        <Form.Check\r\n          id={`checkbox-${id}-${val}`}\r\n          type=\"checkbox\"\r\n          key={`${id}-${val}-${index}`}\r\n          value={val}\r\n          inline\r\n          disabled={disabled}\r\n          defaultChecked={defaultValue.includes(val)}\r\n          label={val}\r\n          onChange={(e: any) => onChecke(e.target.checked, val)}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkboxs;\r\n","import { FC, useMemo } from \"react\";\r\nimport { Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { ControlType, FormControlType } from \"shared/types/FormControlType\";\r\nimport Checkboxs from \"./Checboxs\";\r\n\r\nconst FormControlParser: FC<{ formControlItem: FormControlType }> = ({ formControlItem }) => {\r\n  const { label = \"\", ...rest } = formControlItem;\r\n\r\n  const component: JSX.Element = useMemo(() => {\r\n    const {\r\n      controlType,\r\n      defaultValue,\r\n      placeholder,\r\n      type,\r\n      // value,\r\n      disabled,\r\n      values = [],\r\n      id,\r\n      children = [],\r\n      columns = 1,\r\n      bordered = false\r\n    } = rest;\r\n    switch (controlType) {\r\n      case ControlType.Checkbox:\r\n        return (\r\n          <Checkboxs id={id} defaultValue={(defaultValue || []) as string[]} disabled={disabled} values={values} />\r\n        );\r\n      case ControlType.Radio:\r\n        return (\r\n          <>\r\n            {values.map((val: string, index: number) => (\r\n              <Form.Check\r\n                id={`radio-${id}-${val}`}\r\n                defaultChecked={val === defaultValue}\r\n                type=\"radio\"\r\n                key={`${id}-${val}-${index}`}\r\n                value={val}\r\n                inline\r\n                name={id}\r\n                label={val}\r\n                disabled={disabled}\r\n              />\r\n            ))}\r\n          </>\r\n        );\r\n      case ControlType.TextArea:\r\n        return (\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={4}\r\n            placeholder={placeholder}\r\n            defaultValue={(defaultValue || \"\").toString()}\r\n            name={id}\r\n            disabled={disabled}\r\n          />\r\n        );\r\n      case ControlType.Select:\r\n        return (\r\n          <Form.Select defaultValue={(defaultValue || \"\").toString()} name={id} disabled={disabled}>\r\n            {values.map((opt: string, index: number) => (\r\n              <option key={`${id}-${opt}-${index}`} value={opt}>\r\n                {opt}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        );\r\n      case ControlType.Input:\r\n        return (\r\n          <Form.Control\r\n            disabled={disabled}\r\n            type={type?.toString()}\r\n            defaultValue={(defaultValue || \"\").toString()}\r\n            placeholder={placeholder}\r\n            name={id}\r\n          />\r\n        );\r\n      default:\r\n        return bordered ? (\r\n          <Card>\r\n            {label && <Card.Header>{label}</Card.Header>}\r\n            <Card.Body>\r\n              <Row>\r\n                {children.map((item: FormControlType) => (\r\n                  <Col key={`${id}-${item.id}`} md={12 / columns}>\r\n                    <FormControlParser formControlItem={item} />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <h2>{label}</h2>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {children.map((item: FormControlType) => (\r\n                <Col key={`${id}-${item.id}`} md={12 / columns}>\r\n                  <FormControlParser formControlItem={item} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </>\r\n        );\r\n    }\r\n  }, [rest, label]);\r\n\r\n  return formControlItem.controlType === ControlType.Section ? (\r\n    component\r\n  ) : (\r\n    <Form.Group as={Col} className=\"mb-4\">\r\n      {label && <Form.Label>{formControlItem.label}</Form.Label>}\r\n      <div> {component} </div>\r\n    </Form.Group>\r\n  );\r\n};\r\nexport default FormControlParser;\r\n","import { FormControlType } from \"shared/types/FormControlType\";\r\n\r\nexport const getFormLabel = (id: string, list: FormControlType[]): string => {\r\n  let res: string | undefined;\r\n\r\n  for (const item of list) {\r\n    if (item.id === id) {\r\n      res = item.label + \" \" + item.id;\r\n      break;\r\n    } else if (item.children?.length) {\r\n      res = getFormLabel(id, item.children);\r\n      if (res) break;\r\n    }\r\n  }\r\n\r\n  return res || \"\";\r\n};\r\n\r\nexport const getFormValue = (formValue: object, schema: FormControlType[]) => {\r\n  let result: object = {};\r\n  Object.entries(formValue).forEach((entries: string[]) => {\r\n    result = {\r\n      ...result,\r\n      [getFormLabel(entries[0], schema)]: entries[1]\r\n    };\r\n  });\r\n\r\n  return result;\r\n};\r\n","import FormControlParser from \"components/FormControlParser\";\r\nimport { FC, useCallback } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport { FormControlType } from \"shared/types/FormControlType\";\r\nimport { getFormValue } from \"shared/utils/getFormValue\";\r\n\r\nconst FormGenerator: FC<{ schema: FormControlType[]; onSubmit?: (data: object) => void; className?: string }> = ({\r\n  schema = [],\r\n  onSubmit,\r\n  className\r\n}) => {\r\n  const onSubmitForm = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      const formData = new FormData(e.target),\r\n        formDataObj = Object.fromEntries(formData.entries());\r\n\r\n      const formResult = getFormValue(formDataObj, schema);\r\n      onSubmit && onSubmit(formResult);\r\n    },\r\n    [onSubmit, schema]\r\n  );\r\n\r\n  return schema.length ? (\r\n    <Card body className={className}>\r\n      <Form onSubmit={onSubmitForm}>\r\n        {schema.map((item: FormControlType) => (\r\n          <FormControlParser formControlItem={item} key={`parser-${item.id}`} />\r\n        ))}\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Card>\r\n  ) : (\r\n    <h3 className=\"text-center\">This form is empty</h3>\r\n  );\r\n};\r\n\r\nexport default FormGenerator;\r\n","import Toolbox from \"containers/Toolbox\";\r\nimport FormGenerator from \"containers/FormGenerator\";\r\nimport { FC, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport FormBuilderContext from \"shared/types/FormBuilderContext\";\r\nimport { FormControlType } from \"shared/types/FormControlType\";\r\n\r\nconst FormBuilder: FC<{ schema: FormControlType[], onSave?: (schema: FormControlType[]) => void }> = ({ schema = [], onSave }) => {\r\n  const [formSchema, setFormSchema] = useState<FormControlType[]>(schema);\r\n\r\n  const onSaveTemplate = () => onSave && onSave(formSchema);\r\n\r\n  return (\r\n    <FormBuilderContext.Provider value={{ schema: formSchema, setSchema: setFormSchema, onSave: onSaveTemplate }}>\r\n      <Row className=\"my-5\">\r\n        <Col md={4}>\r\n          <Toolbox />\r\n        </Col>\r\n        <Col md={8}>\r\n          <FormGenerator schema={formSchema} />\r\n        </Col>\r\n      </Row>\r\n    </FormBuilderContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FormBuilder;\r\n","import { FormControlType } from \"shared/types/FormControlType\";\r\n\r\nexport const parseTemplate = (templateStr = \"\"): FormControlType[] => {\r\n  try {\r\n    const formSchema = JSON.parse(templateStr) as FormControlType[];\r\n    return formSchema;\r\n  } catch (err: any) {\r\n    console.log(\"Cannot convert template with error: \", err);\r\n  }\r\n\r\n  return [];\r\n};\r\n","import FormGenerator from \"containers/FormGenerator\";\r\nimport { FC, useState } from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\nimport { FormControlType } from \"shared/types/FormControlType\";\r\nimport { parseTemplate } from \"shared/utils/parseTemplate\";\r\n\r\nconst FormGeneratorSample: FC = () => {\r\n  const [schema, setSchema] = useState<FormControlType[]>([]);\r\n\r\n  const onUpload = () => {\r\n    const fileInput = document.createElement(\"input\");\r\n    fileInput.type = \"file\";\r\n    fileInput.style.display = \"none\";\r\n    fileInput.onchange = (e: any) => {\r\n      const file = e.target.files[0];\r\n      if (!file) {\r\n        return;\r\n      }\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (event: any) => {\r\n        var contents = event.target.result;\r\n        const formSchema = parseTemplate(contents);\r\n        formSchema?.length ? setSchema(formSchema) : alert(\"Please choose correct template!\");\r\n        document.body.removeChild(fileInput);\r\n      };\r\n      reader.readAsText(file);\r\n    };\r\n    document.body.appendChild(fileInput);\r\n    fileInput.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mb-4\">\r\n        <Col md={10}>\r\n          <h2>Form Generator</h2>\r\n        </Col>\r\n        <Col md={2}>\r\n          <Button variant=\"outline-success\" onClick={onUpload} className=\"w-100\">\r\n            Upload Template\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <FormGenerator schema={schema} className=\"my-4\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormGeneratorSample;\r\n","import FormBuilder from \"containers/FormBuilder\";\r\nimport { useState } from \"react\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { ControlType, FormControlType, InputFieldType } from \"shared/types/FormControlType\";\r\nimport FormGeneratorSample from \"samples/FormGeneratorSample\";\r\n\r\nconst Sample = () => {\r\n  const [isFormBuilder, toggleShowFormBuilder] = useState(true);\r\n\r\n  const data: FormControlType[] = [\r\n    {\r\n      controlType: ControlType.Input,\r\n      defaultValue: \"\",\r\n      disabled: false,\r\n      label: \"Input Field\",\r\n      placeholder: \"Placeholder\",\r\n      id: \"d9d4e1b9-8760-4aaa-81be-041333cbf0e3\"\r\n    },\r\n    {\r\n      controlType: ControlType.Section,\r\n      children: [\r\n        {\r\n          controlType: ControlType.Checkbox,\r\n          defaultValue: \"\",\r\n          disabled: false,\r\n          label: \"Checkbox Field\",\r\n          placeholder: \"\",\r\n          id: \"166836d1-14f2-4a9e-99e4-2acb16bc10aa\",\r\n          values: [\"One\", \"Two\", \"Three\"]\r\n        },\r\n        {\r\n          controlType: ControlType.Radio,\r\n          values: [\"One\", \"Two\", \"Three\"],\r\n          disabled: false,\r\n          label: \"Radio Field\",\r\n          id: \"38771b38-86b8-474a-8251-b94268df81e6\"\r\n        },\r\n        {\r\n          controlType: ControlType.TextArea,\r\n          value: \"\",\r\n          values: [],\r\n          disabled: false,\r\n          label: \"Area Field\",\r\n          id: \"4e6ad7ab-d286-4504-890f-e4ca56ec6c39\",\r\n          defaultValue: \"Hello world!\"\r\n        },\r\n        {\r\n          controlType: ControlType.Select,\r\n          values: [\"One\", \"Two\", \"Three\"],\r\n          disabled: false,\r\n          label: \"Select Field\",\r\n          id: \"b5027731-e808-47c2-a7d1-871cac6c9fc4\"\r\n        }\r\n      ],\r\n      label: \"Section\",\r\n      bordered: false,\r\n      id: \"9d13cfe5-e145-4d74-b73f-993004fbc8e4\",\r\n      columns: 2\r\n    },\r\n    {\r\n      controlType: ControlType.Section,\r\n      children: [\r\n        {\r\n          controlType: ControlType.Input,\r\n          defaultValue: \"\",\r\n          disabled: false,\r\n          label: \"Datetime\",\r\n          placeholder: \"\",\r\n          id: \"e306440b-2864-4561-b514-3b02173b2dbf\",\r\n          type: InputFieldType.datetime\r\n        },\r\n        {\r\n          controlType: ControlType.Input,\r\n          defaultValue: \"\",\r\n          disabled: false,\r\n          label: \"Date\",\r\n          placeholder: \"\",\r\n          id: \"40e9107e-b0ea-4193-aef9-952e9def8f1b\",\r\n          type: InputFieldType.date\r\n        },\r\n        {\r\n          controlType: ControlType.Input,\r\n          defaultValue: \"\",\r\n          disabled: false,\r\n          label: \"Time\",\r\n          placeholder: \"\",\r\n          id: \"fafeb28f-a1f0-4cc7-acdf-a7ad798477af\",\r\n          type: InputFieldType.time\r\n        },\r\n        {\r\n          controlType: ControlType.Input,\r\n          defaultValue: \"dongntuyen\",\r\n          disabled: false,\r\n          label: \"Secure\",\r\n          placeholder: \"Password\",\r\n          id: \"e9befa72-bb25-4920-8f73-1868a9c9752b\",\r\n          type: InputFieldType.password\r\n        },\r\n        {\r\n          controlType: ControlType.Input,\r\n          defaultValue: \"111\",\r\n          disabled: true,\r\n          label: \"Number\",\r\n          placeholder: \"\",\r\n          id: \"baf7756f-a9e2-4fa3-9635-66fae54634cd\",\r\n          type: InputFieldType.number\r\n        }\r\n      ],\r\n      label: \"Section with Border\",\r\n      bordered: true,\r\n      id: \"726b4e49-d176-4297-83ca-0be026a66980\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n          <h1 className=\"text-center my-3\"> Demo Form Machine </h1>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n          <Button size=\"lg\" onClick={() => toggleShowFormBuilder(!isFormBuilder)} className=\"w-100 my-3\">\r\n            Show {isFormBuilder ? \"Form Generator\" : \"Form Builder\"}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {isFormBuilder ? (\r\n        <FormBuilder\r\n          schema={data}\r\n          onSave={(template: object) => {\r\n            alert(\"Templates was saved! Check console!\");\r\n            console.log(template);\r\n          }}\r\n        />\r\n      ) : (\r\n        <FormGeneratorSample />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sample;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Sample from \"samples/Sample\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Sample />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nexport { default as FormBuilder } from \"containers/FormBuilder\";\nexport { default as FormGenerator } from \"containers/FormGenerator\";\nexport type { FormControlType, ControlType } from \"shared/types/FormControlType\";\nexport { parseTemplate } from \"shared/utils/parseTemplate\";\n"],"sourceRoot":""}