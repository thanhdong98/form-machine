{"version":3,"sources":["shared/types/FormControlType.ts","shared/types/FormBuilderContext.ts","shared/types/FormFieldType.ts","components/FormControlParser/Checboxs.tsx","components/FormControlParser/FormControlParser.tsx","shared/utils/getFormValue.ts","containers/FormGenerator/FormGenerator.tsx","components/AddControlButton/AddControlButton.tsx","components/Tooltip/Tooltip.tsx","shared/constants/ControlValueDefault.ts","shared/icons/DownArrow.tsx","shared/icons/Plus.tsx","shared/icons/UpArrow.tsx","shared/icons/Trash.tsx","shared/icons/Download.tsx","shared/icons/Save.tsx","shared/hooks/useBreakpoint.ts","components/ActionPopover/ActionPopover.tsx","shared/constants/ValidFormFields.ts","components/FormFieldEditor/FormChildrenFieldEditor.tsx","components/FormFieldEditor/FormValueFieldEditor.tsx","components/FormFieldEditor/FormFieldEditor.tsx","containers/Toolbox/ToolboxItem.tsx","containers/Toolbox/Toolbox.tsx","containers/FormBuilder/FormBuilder.tsx","shared/utils/parseTemplate.ts","samples/FormGeneratorSample.tsx","samples/Sample.tsx","index.tsx"],"names":["ControlType","InputFieldType","FormBuilderContext","createContext","schema","setSchema","onSave","FormFieldType","Checkboxs","id","defaultValue","disabled","values","useState","value","setValue","Form","Control","type","name","map","val","index","Check","inline","defaultChecked","includes","label","onChange","e","checked","filter","x","onChecke","target","FormControlParser","formControlItem","rest","component","useMemo","controlType","placeholder","children","columns","bordered","Checkbox","Radio","TextArea","as","rows","toString","Select","opt","Input","Card","className","Header","Body","Row","item","Col","xs","Section","Group","Label","getFormLabel","list","res","length","FormGenerator","onSubmit","onSubmitForm","useCallback","preventDefault","formData","FormData","formResult","formValue","Object","entries","question","answer","getFormValue","fromEntries","Button","variant","AddControlButton","onAdd","showControls","toggleShowControl","onClick","onMouseLeave","style","zIndex","top","right","width","transition","height","control","Tooltip","placement","text","OverlayTrigger","delay","show","hide","overlay","FormControlDefaultValue","DownArrow","y","viewBox","enableBackground","d","Plus","fill","UpArrow","Trash","Download","Save","getDeviceConfig","useBreakpoint","window","innerWidth","brkPnt","setBrkPnt","useEffect","calcInnerWidth","throttle","addEventListener","removeEventListener","ActionPopover","onDelete","onMove","showAdd","toggleShowAdd","breakpoint","sm","md","lg","bottom","ValidFormFields","FormChildrenFieldEditor","editFormItem","addChild","afterId","newItem","v4","afterIndex","findIndex","splice","deleteChild","editChild","editingFormItem","itemIndex","isUp","swappedIndex","tempItem","Accordion","flush","formItem","addFormItem","deleteFormItem","FormValueFields","onChangeField","i","onDeleteField","size","FormFieldEditor","FormFieldLabels","FormFieldInputs","FormValueFieldEditor","field","formField","ToolboxItem","showAction","toggleShowAction","Item","eventKey","onMouseEnter","Toolbox","useContext","element","document","createElement","textFile","Blob","JSON","stringify","href","URL","createObjectURL","download","body","appendChild","click","FormBuilder","formSchema","setFormSchema","Provider","parseTemplate","templateStr","parse","err","console","log","FormGeneratorSample","fileInput","display","onchange","file","files","reader","FileReader","onload","event","contents","result","alert","removeChild","readAsText","r","join","Sample","isFormBuilder","toggleShowFormBuilder","data","datetime","date","time","password","number","Container","template","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.301d8a7f.chunk.js","sourcesContent":["export enum ControlType {\r\n  Input = \"Input\",\r\n  Checkbox = \"Checkbox\",\r\n  Radio = \"Radio\",\r\n  Select = \"Select\",\r\n  TextArea = \"TextArea\",\r\n  Section = \"Section\"\r\n}\r\n\r\nexport enum InputFieldType {\r\n  number = \"number\",\r\n  text = \"text\",\r\n  password = \"password\",\r\n  time = \"time\",\r\n  date = \"date\",\r\n  datetime = \"datetime-local\"\r\n}\r\n\r\ninterface FormControlType {\r\n  id?: string;\r\n  controlType: ControlType;\r\n  label?: string;\r\n  value?: string | boolean | number | string[];\r\n  placeholder?: string;\r\n  defaultValue?: string | number | string[];\r\n  values?: string[];\r\n  disabled?: boolean;\r\n  type?: InputFieldType;\r\n  columns?: 1 | 2 | 3 | 4 | 6;\r\n  children?: FormControlType[];\r\n  bordered?: boolean;\r\n}\r\n\r\nexport type { FormControlType };\r\n","import { createContext } from \"react\";\r\nimport { FormControlType } from \"./FormControlType\";\r\n\r\nexport type FormBuilderContextType = {\r\n  schema: FormControlType[];\r\n  setSchema: (schema: FormControlType[]) => void;\r\n  onSave?: () => void;\r\n};\r\n\r\nexport const FormBuilderContext = createContext<FormBuilderContextType>({\r\n  schema: [],\r\n  setSchema: (schema: FormControlType[]) => {},\r\n  onSave: () => {}\r\n});\r\n\r\nexport default FormBuilderContext;\r\n","export enum FormFieldType {\r\n  controlType = \"controlType\",\r\n  label = \"label\",\r\n  value = \"value\",\r\n  placeholder = \"placeholder\",\r\n  defaultValue = \"defaultValue\",\r\n  values = \"values\",\r\n  disabled = \"disabled\",\r\n  type = \"type\",\r\n  columns = \"columns\",\r\n  children = \"children\",\r\n  bordered = \"bordered\"\r\n}\r\n","import { FC, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst Checkboxs: FC<{ id?: string; defaultValue: string[]; disabled?: boolean; values: string[] }> = ({\r\n  id = \"\",\r\n  defaultValue,\r\n  disabled = false,\r\n  values = []\r\n}) => {\r\n  const [value, setValue] = useState<string[]>(defaultValue);\r\n\r\n  const onChecke = (checked: boolean, val: string) => {\r\n    if (checked) {\r\n      setValue([...value, val]);\r\n    } else {\r\n      setValue(value.filter((x) => x !== val));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Form.Control type=\"hidden\" name={id} value={value} />\r\n      {values.map((val: string, index: number) => (\r\n        <Form.Check\r\n          id={`checkbox-${id}-${val}`}\r\n          type=\"checkbox\"\r\n          key={`${id}-${val}-${index}`}\r\n          value={val}\r\n          inline\r\n          disabled={disabled}\r\n          defaultChecked={defaultValue.includes(val)}\r\n          label={val}\r\n          onChange={(e: any) => onChecke(e.target.checked, val)}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkboxs;\r\n","import { FC, useMemo } from \"react\";\r\nimport { Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { ControlType, FormControlType } from \"../../shared/types/FormControlType\";\r\nimport Checkboxs from \"./Checboxs\";\r\n\r\nconst FormControlParser: FC<{ formControlItem: FormControlType }> = ({ formControlItem }) => {\r\n  const { label = \"\", ...rest } = formControlItem;\r\n\r\n  const component: JSX.Element = useMemo(() => {\r\n    const {\r\n      controlType,\r\n      defaultValue,\r\n      placeholder,\r\n      type,\r\n      // value,\r\n      disabled,\r\n      values = [],\r\n      id,\r\n      children = [],\r\n      columns = 1,\r\n      bordered = false\r\n    } = rest;\r\n    switch (controlType) {\r\n      case ControlType.Checkbox:\r\n        return (\r\n          <Checkboxs id={id} defaultValue={(defaultValue || []) as string[]} disabled={disabled} values={values} />\r\n        );\r\n      case ControlType.Radio:\r\n        return (\r\n          <>\r\n            {values.map((val: string, index: number) => (\r\n              <Form.Check\r\n                id={`radio-${id}-${val}`}\r\n                defaultChecked={val === defaultValue}\r\n                type=\"radio\"\r\n                key={`${id}-${val}-${index}`}\r\n                value={val}\r\n                inline\r\n                name={id}\r\n                label={val}\r\n                disabled={disabled}\r\n              />\r\n            ))}\r\n          </>\r\n        );\r\n      case ControlType.TextArea:\r\n        return (\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={4}\r\n            placeholder={placeholder}\r\n            defaultValue={(defaultValue || \"\").toString()}\r\n            name={id}\r\n            disabled={disabled}\r\n          />\r\n        );\r\n      case ControlType.Select:\r\n        return (\r\n          <Form.Select defaultValue={(defaultValue || \"\").toString()} name={id} disabled={disabled}>\r\n            {values.map((opt: string, index: number) => (\r\n              <option key={`${id}-${opt}-${index}`} value={opt}>\r\n                {opt}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        );\r\n      case ControlType.Input:\r\n        return (\r\n          <Form.Control\r\n            disabled={disabled}\r\n            type={type?.toString()}\r\n            defaultValue={(defaultValue || \"\").toString()}\r\n            placeholder={placeholder}\r\n            name={id}\r\n          />\r\n        );\r\n      default:\r\n        return bordered ? (\r\n          <Card className=\"mb-3\">\r\n            {label && <Card.Header>{label}</Card.Header>}\r\n            <Card.Body>\r\n              <Row>\r\n                {children.map((item: FormControlType) => (\r\n                  <Col key={`${id}-${item.id}`} xs={12 / columns}>\r\n                    <FormControlParser formControlItem={item} />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <h2>{label}</h2>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {children.map((item: FormControlType) => (\r\n                <Col key={`${id}-${item.id}`} xs={12 / columns}>\r\n                  <FormControlParser formControlItem={item} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </>\r\n        );\r\n    }\r\n  }, [rest, label]);\r\n\r\n  return formControlItem.controlType === ControlType.Section ? (\r\n    component\r\n  ) : (\r\n    <Form.Group as={Col} className=\"mb-4\">\r\n      {label && <Form.Label>{formControlItem.label}</Form.Label>}\r\n      <div> {component} </div>\r\n    </Form.Group>\r\n  );\r\n};\r\nexport default FormControlParser;\r\n","import { FormControlType } from \"../types/FormControlType\";\r\n\r\nexport const getFormLabel = (id: string, list: FormControlType[]): string => {\r\n  let res: string | undefined;\r\n\r\n  for (const item of list) {\r\n    if (item.id === id) {\r\n      res = item.label;\r\n      break;\r\n    } else if (item.children?.length) {\r\n      res = getFormLabel(id, item.children);\r\n      if (res) break;\r\n    }\r\n  }\r\n\r\n  return res || \"\";\r\n};\r\n\r\nexport const getFormValue = (formValue: object, schema: FormControlType[]) => {\r\n  return Object.entries(formValue).map((entries: string[]) => ({\r\n    question: getFormLabel(entries[0], schema),\r\n    answer: entries[1]\r\n  }));\r\n};\r\n","import { FC, useCallback } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport FormControlParser from \"../../components/FormControlParser\";\r\nimport { FormControlType } from \"../../shared/types/FormControlType\";\r\nimport { getFormValue } from \"../../shared/utils/getFormValue\";\r\n\r\nconst FormGenerator: FC<{ schema: FormControlType[]; onSubmit?: (data: object) => void; className?: string }> = ({\r\n  schema = [],\r\n  onSubmit,\r\n  className = \"\"\r\n}) => {\r\n  const onSubmitForm = useCallback(\r\n    (e: any) => {\r\n      e.preventDefault();\r\n      const formData = new FormData(e.target),\r\n        formDataObj = Object.fromEntries(formData.entries());\r\n\r\n      const formResult = getFormValue(formDataObj, schema);\r\n      onSubmit && onSubmit(formResult);\r\n    },\r\n    [onSubmit, schema]\r\n  );\r\n\r\n  return schema.length ? (\r\n    <Form onSubmit={onSubmitForm} className={`${className} text-left`}>\r\n      {schema.map((item: FormControlType) => (\r\n        <FormControlParser formControlItem={item} key={`parser-${item.id}`} />\r\n      ))}\r\n      <Button variant=\"success\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  ) : (\r\n    <h3 className=\"text-center\">This form is empty</h3>\r\n  );\r\n};\r\n\r\nexport default FormGenerator;\r\n","import { FC, ReactNode, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { ControlType } from \"../../shared/types/FormControlType\";\r\n\r\nconst AddControlButton: FC<{ onAdd: (controlType: ControlType) => void; children: ReactNode }> = ({\r\n  onAdd,\r\n  children\r\n}) => {\r\n  const [showControls, toggleShowControl] = useState(false);\r\n\r\n  return (\r\n    <Button\r\n      as=\"div\"\r\n      variant=\"success\"\r\n      className=\"w-100 position-relative\"\r\n      onClick={() => toggleShowControl(true)}\r\n      onMouseLeave={() => toggleShowControl(false)}\r\n    >\r\n      {showControls && (\r\n        <div\r\n          className=\"position-absolute d-flex flex-wrap justify-content-start overflow-hidden bg-white\"\r\n          style={{\r\n            zIndex: 2,\r\n            top: \"calc(100% + 1px)\",\r\n            right: 0,\r\n            width: \"auto\",\r\n            transition: \"height 0.25s ease-in-out\",\r\n            height: 100\r\n          }}\r\n        >\r\n          {Object.values(ControlType).map((control: ControlType) => (\r\n            <Button\r\n              onClick={() => onAdd(control)}\r\n              className=\"h-50 w-25\"\r\n              variant=\"outline-primary\"\r\n              key={`action-${control}`}\r\n            >\r\n              {control}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AddControlButton;\r\n","import { FC, ReactElement } from \"react\";\r\nimport { OverlayTrigger, Tooltip as BootstrapTooltip } from \"react-bootstrap\";\r\nimport { Placement } from \"react-bootstrap/esm/types\";\r\n\r\nconst Tooltip: FC<{ children: ReactElement; placement?: Placement; text: string }> = ({\r\n  children,\r\n  placement = \"top\",\r\n  text\r\n}) => {\r\n  return (\r\n    <OverlayTrigger\r\n      placement={placement}\r\n      delay={{ show: 500, hide: 500 }}\r\n      overlay={<BootstrapTooltip>{text}</BootstrapTooltip>}\r\n    >\r\n      {children}\r\n    </OverlayTrigger>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import { ControlType, FormControlType } from \"../types/FormControlType\";\r\n\r\nconst CheckboxDefaultValue: FormControlType = {\r\n  controlType: ControlType.Checkbox,\r\n  defaultValue: [],\r\n  values: [],\r\n  disabled: false,\r\n  label: \"\"\r\n};\r\n\r\nconst RadioDefaultValue: FormControlType = {\r\n  controlType: ControlType.Radio,\r\n  values: [],\r\n  disabled: false,\r\n  label: \"\"\r\n};\r\n\r\nconst InputDefaultValue: FormControlType = {\r\n  controlType: ControlType.Input,\r\n  defaultValue: \"\",\r\n  disabled: false,\r\n  label: \"\",\r\n  placeholder: \"\"\r\n};\r\n\r\nconst TextAreaDefaultValue: FormControlType = {\r\n  controlType: ControlType.TextArea,\r\n  value: \"\",\r\n  values: [],\r\n  disabled: false,\r\n  label: \"\"\r\n};\r\n\r\nconst SelectDefaultValue: FormControlType = {\r\n  controlType: ControlType.Select,\r\n  values: [],\r\n  disabled: false,\r\n  label: \"\"\r\n};\r\n\r\nconst SectionDefaultValue: FormControlType = {\r\n  controlType: ControlType.Section,\r\n  children: [],\r\n  label: \"\",\r\n  bordered: false\r\n};\r\n\r\nconst FormControlDefaultValue: Record<ControlType, FormControlType> = {\r\n  Checkbox: CheckboxDefaultValue,\r\n  Radio: RadioDefaultValue,\r\n  Input: InputDefaultValue,\r\n  TextArea: TextAreaDefaultValue,\r\n  Select: SelectDefaultValue,\r\n  Section: SectionDefaultValue\r\n};\r\n\r\nexport default FormControlDefaultValue;\r\n","import { FC } from \"react\";\r\n\r\nconst DownArrow: FC<{ width?: string | number; height?: string | number }> = ({ width, height }) => (\r\n  <svg\r\n    width={width}\r\n    height={height}\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    viewBox=\"0 0 123.97 123.97\"\r\n    enableBackground=\"new 0 0 123.97 123.97\"\r\n  >\r\n    <g>\r\n      <path d=\"M51.802,96.062c2.801,2.801,6.5,4.2,10.2,4.2s7.4-1.399,10.2-4.2l47.3-47.3c5.5-5.5,6.101-14.6,0.8-20.3c-5.6-6.1-15.1-6.3-20.899-0.5l-30.4,30.3c-3.899,3.9-10.2,3.9-14.1,0l-30.3-30.3c-5.801-5.8-15.301-5.7-20.9,0.5c-5.3,5.7-4.8,14.8,0.8,20.3L51.802,96.062z\" />\r\n    </g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n  </svg>\r\n);\r\n\r\nexport default DownArrow;\r\n","import { FC } from \"react\";\r\n\r\nconst Plus: FC<{ width?: string | number; height?: string | number; fill?: string }> = ({\r\n  width,\r\n  height,\r\n  fill = \"white\"\r\n}) => (\r\n  <svg height={height} viewBox=\"0 0 448 448\" width={width} fill={fill}>\r\n    <path d=\"m408 184h-136c-4.417969 0-8-3.582031-8-8v-136c0-22.089844-17.910156-40-40-40s-40 17.910156-40 40v136c0 4.417969-3.582031 8-8 8h-136c-22.089844 0-40 17.910156-40 40s17.910156 40 40 40h136c4.417969 0 8 3.582031 8 8v136c0 22.089844 17.910156 40 40 40s40-17.910156 40-40v-136c0-4.417969 3.582031-8 8-8h136c22.089844 0 40-17.910156 40-40s-17.910156-40-40-40zm0 0\" />\r\n  </svg>\r\n);\r\n\r\nexport default Plus;\r\n","import { FC } from \"react\";\r\n\r\nconst UpArrow: FC<{ width?: string | number; height?: string | number }> = ({ width, height }) => (\r\n  <svg\r\n    width={width}\r\n    height={height}\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    viewBox=\"0 0 123.969 123.97\"\r\n    enableBackground=\"new 0 0 123.969 123.97\"\r\n  >\r\n    <g>\r\n      <path d=\"M120.266,95.584c5.301-5.801,4.801-14.801-0.8-20.301l-47.3-47.4c-2.8-2.8-6.5-4.2-10.2-4.2s-7.399,1.4-10.2,4.2l-47.299,47.3c-5.5,5.5-6.1,14.6-0.8,20.3c5.6,6.101,15.099,6.3,20.9,0.5l30.3-30.3c3.899-3.9,10.2-3.9,14.1,0l30.3,30.3C105.167,101.883,114.667,101.684,120.266,95.584z\" />\r\n    </g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n  </svg>\r\n);\r\n\r\nexport default UpArrow;\r\n","import { FC } from \"react\";\r\n\r\nconst Trash: FC<{ width?: string | number; height?: string | number; fill?: string }> = ({\r\n  width,\r\n  height,\r\n  fill = \"white\"\r\n}) => (\r\n  <svg enableBackground=\"new 0 0 512 512\" height={height} viewBox=\"0 0 512 512\" width={width} fill={fill}>\r\n    <g>\r\n      <path d=\"m424 64h-88v-16c0-26.51-21.49-48-48-48h-64c-26.51 0-48 21.49-48 48v16h-88c-22.091 0-40 17.909-40 40v32c0 8.837 7.163 16 16 16h384c8.837 0 16-7.163 16-16v-32c0-22.091-17.909-40-40-40zm-216-16c0-8.82 7.18-16 16-16h64c8.82 0 16 7.18 16 16v16h-96z\" />\r\n      <path d=\"m78.364 184c-2.855 0-5.13 2.386-4.994 5.238l13.2 277.042c1.22 25.64 22.28 45.72 47.94 45.72h242.98c25.66 0 46.72-20.08 47.94-45.72l13.2-277.042c.136-2.852-2.139-5.238-4.994-5.238zm241.636 40c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16z\" />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default Trash;\r\n","import { FC } from \"react\";\r\n\r\nconst Download: FC<{ width?: string | number; height?: string | number; fill?: string }> = ({\r\n  width,\r\n  height,\r\n  fill = \"white\"\r\n}) => (\r\n  <svg height={height} width={width} fill={fill} enableBackground=\"new 0 0 24 24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"m12 16c-.205 0-.401-.084-.542-.232l-5.25-5.5c-.455-.476-.117-1.268.542-1.268h2.75v-5.75c0-.689.561-1.25 1.25-1.25h2.5c.689 0 1.25.561 1.25 1.25v5.75h2.75c.659 0 .997.792.542 1.268l-5.25 5.5c-.141.148-.337.232-.542.232z\" />\r\n    <path d=\"m22.25 22h-20.5c-.965 0-1.75-.785-1.75-1.75v-.5c0-.965.785-1.75 1.75-1.75h20.5c.965 0 1.75.785 1.75 1.75v.5c0 .965-.785 1.75-1.75 1.75z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Download;\r\n","import { FC } from \"react\";\r\n\r\nconst Save: FC<{ width?: string | number; height?: string | number }> = ({ width, height }) => (\r\n  <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" enableBackground=\"new 0 0 512 512\" width={width} height={height}>\r\n    <g>\r\n      <path d=\"M493.254,77.255l-58.508-58.51C422.742,6.742,406.465,0,389.49,0H352v112c0,8.836-7.164,16-16,16H80c-8.836,0-16-7.164-16-16V0H32C14.328,0,0,14.326,0,32v448c0,17.673,14.328,32,32,32h448c17.672,0,32-14.327,32-32V122.51C512,105.535,505.258,89.257,493.254,77.255z M448,448H64V256h384V448z\" />\r\n      <rect x=\"224\" width=\"64\" height=\"96\" />\r\n    </g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n    <g></g>\r\n  </svg>\r\n);\r\n\r\nexport default Save;\r\n","import { useState, useEffect } from \"react\";\r\nimport throttle from \"lodash.throttle\";\r\n\r\nconst getDeviceConfig = (width: number): \"xs\" | \"sm\" | \"md\" | \"lg\" => {\r\n  if (width < 720) {\r\n    return \"sm\";\r\n  } else if (width < 1024) {\r\n    return \"md\";\r\n  } else {\r\n    return \"lg\";\r\n  }\r\n};\r\n\r\nconst useBreakpoint = (): \"xs\" | \"sm\" | \"md\" | \"lg\" => {\r\n  const [brkPnt, setBrkPnt] = useState(() => getDeviceConfig(window.innerWidth));\r\n\r\n  useEffect(() => {\r\n    const calcInnerWidth = throttle(function () {\r\n      setBrkPnt(getDeviceConfig(window.innerWidth));\r\n    }, 200);\r\n    window.addEventListener(\"resize\", calcInnerWidth);\r\n    return () => window.removeEventListener(\"resize\", calcInnerWidth);\r\n  }, []);\r\n\r\n  return brkPnt;\r\n};\r\n\r\nexport default useBreakpoint;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { Button, Col, Row } from \"react-bootstrap\";\r\nimport useBreakpoint from \"../../shared/hooks/useBreakpoint\";\r\nimport { DownArrow, Plus, Trash, UpArrow } from \"../../shared/icons\";\r\nimport { ControlType } from \"../../shared/types/FormControlType\";\r\nimport Tooltip from \"../Tooltip\";\r\n\r\nconst ActionPopover: FC<{\r\n  show: boolean;\r\n  onAdd: (element: ControlType) => void;\r\n  onDelete: () => void;\r\n  onMove: (isUp?: boolean) => void;\r\n}> = ({ show = false, onAdd, onDelete, onMove }) => {\r\n  const [showAdd, toggleShowAdd] = useState(false);\r\n  const breakpoint = useBreakpoint();\r\n\r\n  useEffect(() => {\r\n    if (!show) {\r\n      toggleShowAdd(false);\r\n    }\r\n  }, [show]);\r\n\r\n  const rows: Record<string, number> = {\r\n    sm: 6,\r\n    md: 3,\r\n    lg: 2\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"position-absolute d-flex flex-wrap justify-content-start overflow-hidden bg-white\"\r\n      style={{\r\n        zIndex: 2,\r\n        bottom: \"calc(100% + 1px)\",\r\n        right: 0,\r\n        width: \"auto\",\r\n        transition: \"height 0.25s ease-in-out\",\r\n        height: show ? (showAdd ? rows[breakpoint] * 40 : 50) : 0\r\n      }}\r\n    >\r\n      {showAdd ? (\r\n        <Row className=\"m-0\">\r\n          {Object.values(ControlType).map((control: ControlType) => (\r\n            <Col\r\n              key={`action-${control}`}\r\n              className=\"p-0\"\r\n              md={6}\r\n              lg={4}\r\n              style={{ height: `${100 / rows[breakpoint]}` }}\r\n            >\r\n              <Button onClick={() => onAdd(control)} className=\"w-100 h-100\" variant=\"outline-primary\">\r\n                {control}\r\n              </Button>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ) : (\r\n        <>\r\n          <Tooltip text=\"Add item\">\r\n            <Button variant=\"success\" className=\"h-100\" onClick={() => toggleShowAdd(true)}>\r\n              <Plus height={25} />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip text=\"Move up\">\r\n            <Button variant=\"outline-info\" className=\"h-100\" onClick={() => onMove(true)}>\r\n              <UpArrow height={25} />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip text=\"Move down\">\r\n            <Button variant=\"outline-info\" className=\"h-100\" onClick={() => onMove()}>\r\n              <DownArrow height={25} />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip text=\"Delete item\">\r\n            <Button variant=\"danger\" className=\"h-100\" onClick={onDelete}>\r\n              <Trash height={25} />\r\n            </Button>\r\n          </Tooltip>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionPopover;\r\n","import { ControlType } from \"../types/FormControlType\";\r\nimport { FormFieldType } from \"../types/FormFieldType\";\r\n\r\nconst ValidFormFields: Record<ControlType, FormFieldType[]> = {\r\n  Input: [\r\n    FormFieldType.controlType,\r\n    FormFieldType.type,\r\n    FormFieldType.label,\r\n    FormFieldType.placeholder,\r\n    FormFieldType.defaultValue,\r\n    FormFieldType.disabled\r\n  ],\r\n  Checkbox: [\r\n    FormFieldType.controlType,\r\n    FormFieldType.label,\r\n    FormFieldType.defaultValue,\r\n    FormFieldType.values,\r\n    FormFieldType.disabled\r\n  ],\r\n  Radio: [\r\n    FormFieldType.controlType,\r\n    FormFieldType.label,\r\n    FormFieldType.defaultValue,\r\n    FormFieldType.values,\r\n    FormFieldType.disabled\r\n  ],\r\n  Select: [\r\n    FormFieldType.controlType,\r\n    FormFieldType.label,\r\n    FormFieldType.defaultValue,\r\n    FormFieldType.values,\r\n    FormFieldType.disabled\r\n  ],\r\n  TextArea: [FormFieldType.controlType, FormFieldType.label, FormFieldType.defaultValue, FormFieldType.disabled],\r\n  Section: [FormFieldType.label, FormFieldType.columns, FormFieldType.bordered, FormFieldType.children]\r\n};\r\n\r\nexport default ValidFormFields;\r\n","import { FC } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport { v4 } from \"uuid\";\r\nimport ToolboxItem from \"../../containers/Toolbox/ToolboxItem\";\r\nimport FormControlDefaultValue from \"../../shared/constants/ControlValueDefault\";\r\nimport { ControlType, FormControlType } from \"../../shared/types/FormControlType\";\r\nimport AddControlButton from \"../AddControlButton\";\r\n\r\nconst FormChildrenFieldEditor: FC<{ formControlItem: FormControlType; editFormItem: (item: FormControlType) => void }> =\r\n  ({ formControlItem, editFormItem }) => {\r\n    const { children = [] } = formControlItem;\r\n    const addChild = (type: ControlType, afterId?: string) => {\r\n      const newItem = { ...FormControlDefaultValue[type], id: v4() };\r\n      if (afterId) {\r\n        const afterIndex = children.findIndex((item: FormControlType) => item.id === afterId);\r\n        children.splice(afterIndex + 1, 0, newItem);\r\n        editFormItem({ ...formControlItem, children: [...children] });\r\n      } else editFormItem({ ...formControlItem, children: [...children, newItem] });\r\n    };\r\n\r\n    const deleteChild = (id: string) =>\r\n      editFormItem({ ...formControlItem, children: children.filter((item: FormControlType) => item.id !== id) });\r\n\r\n    const editChild = (editingFormItem: FormControlType) => {\r\n      if (editingFormItem) {\r\n        const itemIndex = children.findIndex((item) => item.id === editingFormItem.id);\r\n        children[itemIndex] = editingFormItem;\r\n\r\n        editFormItem({ ...formControlItem, children: [...children] });\r\n      }\r\n    };\r\n\r\n    const onMove = (id: string, isUp?: boolean) => {\r\n      const index = children.findIndex((item) => item.id === id);\r\n      const swappedIndex = isUp ? index - 1 : index + 1;\r\n\r\n      const tempItem = children[swappedIndex];\r\n\r\n      if (tempItem) {\r\n        children[swappedIndex] = children[index];\r\n        children[index] = tempItem;\r\n        editFormItem({ ...formControlItem, children: [...children] });\r\n      }\r\n    };\r\n\r\n    return formControlItem.children?.length ? (\r\n      <Accordion flush={false}>\r\n        {formControlItem.children?.map((formItem: FormControlType) => (\r\n          <ToolboxItem\r\n            key={`toolbox-${formItem.id}`}\r\n            addFormItem={addChild}\r\n            deleteFormItem={deleteChild}\r\n            editFormItem={editChild}\r\n            formItem={formItem}\r\n            onMove={onMove}\r\n          />\r\n        ))}\r\n      </Accordion>\r\n    ) : (\r\n      <AddControlButton onAdd={addChild}> Add Child </AddControlButton>\r\n    );\r\n  };\r\n\r\nexport default FormChildrenFieldEditor;\r\n","import { FC } from \"react\";\r\nimport { Col, Form, Row, Button } from \"react-bootstrap\";\r\nimport { Trash } from \"../../shared/icons\";\r\n\r\nconst FormValueFields: FC<{ values?: string[]; onChange: (value: string[]) => void }> = ({ values = [], onChange }) => {\r\n  const onChangeField = (e: any, i: number) => {\r\n    values[i] = e.target.value;\r\n    onChange([...values]);\r\n  };\r\n\r\n  const onAddField = () => {\r\n    onChange([...values, \"\"]);\r\n  };\r\n\r\n  const onDeleteField = (index: number) => {\r\n    values.splice(index, 1);\r\n    onChange([...values]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {values.map((val: string, index: number) => (\r\n        <Row className=\"mb-2\" key={`val-${index}`}>\r\n          <Col md={9}>\r\n            <Form.Control type=\"text\" value={val} onChange={(e) => onChangeField(e, index)} name=\"defaultValue\" />\r\n          </Col>\r\n          <Col md={3}>\r\n            <Button className=\"w-100 h-100\" variant=\"danger\" onClick={() => onDeleteField(index)} size=\"sm\">\r\n              <Trash height={20} />\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      ))}\r\n      <Row>\r\n        <Col md={6} onClick={onAddField}>\r\n          <Button variant=\"success\" className=\"w-100\" size=\"lg\">\r\n            Add Field\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormValueFields;\r\n","import { FC, ReactElement, useCallback, useMemo } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport ValidFormFields from \"../../shared/constants/ValidFormFields\";\r\nimport { ControlType, FormControlType, InputFieldType } from \"../../shared/types/FormControlType\";\r\nimport { FormFieldType } from \"../../shared/types/FormFieldType\";\r\nimport FormChildrenFieldEditor from \"./FormChildrenFieldEditor\";\r\nimport FormValueFieldEditor from \"./FormValueFieldEditor\";\r\n\r\nconst FormFieldEditor: FC<{ formControlItem: FormControlType; editFormItem: (formItem: FormControlType) => void }> = ({\r\n  formControlItem,\r\n  editFormItem\r\n}) => {\r\n  const onChange = useCallback(\r\n    (e: any) => {\r\n      editFormItem({\r\n        ...formControlItem,\r\n        [e.target.name]: [\"disabled\", \"bordered\"].includes(e.target.name) ? e.target.checked : e.target.value\r\n      });\r\n    },\r\n    [formControlItem, editFormItem]\r\n  );\r\n\r\n  const FormFieldLabels: Record<FormFieldType, string> = {\r\n    disabled: \"Disable\",\r\n    controlType: \"Element Type\",\r\n    label: \"Title\",\r\n    placeholder: \"Placholder\",\r\n    defaultValue: \"Default Value(s)\",\r\n    values: \"Values\",\r\n    value: \"Value\",\r\n    type: \"Type\",\r\n    columns: \"Columns\",\r\n    children: \"Control Items\",\r\n    bordered: \"Contain Border\"\r\n  };\r\n\r\n  const FormFieldInputs: Record<FormFieldType, ReactElement> = useMemo(\r\n    () => ({\r\n      disabled: (\r\n        <Form.Check\r\n          label=\"Disabled\"\r\n          defaultChecked={formControlItem.disabled}\r\n          name=\"disabled\"\r\n          id={`disabledField-${formControlItem.id}`}\r\n          onChange={onChange}\r\n        />\r\n      ),\r\n      controlType: (\r\n        <Form.Select defaultValue={formControlItem.controlType} onChange={onChange} name=\"controlType\">\r\n          {Object.values(ControlType).map((item: ControlType) => (\r\n            <option value={item} key={`controlType-${formControlItem.id}-${item}`}>\r\n              {item.toString()}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      ),\r\n      label: (\r\n        <Form.Control type=\"text\" placeholder=\"Title\" value={formControlItem.label} onChange={onChange} name=\"label\" />\r\n      ),\r\n      placeholder: (\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"placeholder\"\r\n          value={formControlItem.placeholder}\r\n          onChange={onChange}\r\n          name=\"placeholder\"\r\n        />\r\n      ),\r\n      defaultValue: (\r\n        <Form.Control\r\n          type={formControlItem.controlType === ControlType.Input ? formControlItem.type : \"text\"}\r\n          placeholder=\"Default Value\"\r\n          value={formControlItem.defaultValue}\r\n          onChange={onChange}\r\n          name=\"defaultValue\"\r\n        />\r\n      ),\r\n      values: (\r\n        <FormValueFieldEditor\r\n          values={formControlItem.values}\r\n          onChange={(values: string[]) =>\r\n            editFormItem({\r\n              ...formControlItem,\r\n              values: values\r\n            })\r\n          }\r\n        />\r\n      ),\r\n      type: (\r\n        <Form.Select onChange={onChange} value={formControlItem.type} name=\"type\">\r\n          {Object.values(InputFieldType).map((field: string) => (\r\n            <option key={`type-${formControlItem.id}-${field}`} value={field}>\r\n              {field}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      ),\r\n      value: <div>not implement yet</div>,\r\n      children: <FormChildrenFieldEditor editFormItem={editFormItem} formControlItem={formControlItem} />,\r\n      columns: (\r\n        <Form.Select size=\"sm\" onChange={onChange} value={formControlItem.columns} name=\"columns\">\r\n          {[1, 2, 3, 4, 6].map((val) => (\r\n            <option key={`columns-${formControlItem.id}-${val}`} value={val}>\r\n              {val}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      ),\r\n      bordered: (\r\n        <Form.Check\r\n          label=\"Bordered\"\r\n          defaultChecked={formControlItem.bordered}\r\n          name=\"bordered\"\r\n          id={`borderedField-${formControlItem.id}`}\r\n          onChange={onChange}\r\n        />\r\n      )\r\n    }),\r\n    [formControlItem, onChange, editFormItem]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {ValidFormFields[formControlItem.controlType].map((formField: FormFieldType) => (\r\n        <Form.Group key={`group-${formControlItem.id}-${formField}`} className=\"mb-2\">\r\n          <Form.Label>{FormFieldLabels[formField]}</Form.Label>\r\n          {FormFieldInputs[formField]}\r\n        </Form.Group>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormFieldEditor;\r\n","import { FC, useState } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport ActionPopover from \"../../components/ActionPopover\";\r\nimport FormFieldEditor from \"../../components/FormFieldEditor\";\r\nimport { ControlType, FormControlType } from \"../../shared/types/FormControlType\";\r\n\r\nconst ToolboxItem: FC<{\r\n  formItem: FormControlType;\r\n  addFormItem: (item: ControlType, afterId?: string) => void;\r\n  deleteFormItem: (id: string) => void;\r\n  editFormItem: (item: FormControlType) => void;\r\n  onMove: (id: string, isUp?: boolean) => void;\r\n}> = ({ formItem, addFormItem, deleteFormItem, editFormItem, onMove }) => {\r\n  const [showAction, toggleShowAction] = useState(false);\r\n\r\n  return (\r\n    <Accordion.Item\r\n      eventKey={formItem.id || \"\"}\r\n      key={formItem.id}\r\n      className=\"position-relative\"\r\n      onMouseEnter={() => {\r\n        toggleShowAction(true);\r\n      }}\r\n      onMouseLeave={() => toggleShowAction(false)}\r\n    >\r\n      <ActionPopover\r\n        show={showAction}\r\n        onAdd={(control: ControlType) => {\r\n          addFormItem(control, formItem.id);\r\n          toggleShowAction(false);\r\n        }}\r\n        onDelete={() => {\r\n          deleteFormItem(formItem?.id || \"\");\r\n          toggleShowAction(false);\r\n        }}\r\n        onMove={(isUp?: boolean) => {\r\n          onMove(formItem?.id || \"\", isUp);\r\n          toggleShowAction(false);\r\n        }}\r\n      />\r\n      <Accordion.Header>\r\n        {formItem?.controlType} : {formItem?.label}\r\n      </Accordion.Header>\r\n      <Accordion.Body>\r\n        <FormFieldEditor formControlItem={formItem} editFormItem={editFormItem} />\r\n      </Accordion.Body>\r\n    </Accordion.Item>\r\n  );\r\n};\r\n\r\nexport default ToolboxItem;\r\n","import { FC, useContext } from \"react\";\r\nimport { Accordion, Button, Col, Row } from \"react-bootstrap\";\r\nimport { v4 } from \"uuid\";\r\nimport AddControlButton from \"../../components/AddControlButton\";\r\nimport Tooltip from \"../../components/Tooltip\";\r\nimport FormControlDefaultValue from \"../../shared/constants/ControlValueDefault\";\r\nimport { Download, Save } from \"../../shared/icons\";\r\nimport FormBuilderContext from \"../../shared/types/FormBuilderContext\";\r\nimport { ControlType, FormControlType } from \"../../shared/types/FormControlType\";\r\nimport ToolboxItem from \"./ToolboxItem\";\r\n\r\nconst Toolbox: FC = () => {\r\n  const { schema, setSchema, onSave } = useContext(FormBuilderContext);\r\n\r\n  const addFormItem = (type: ControlType, afterId = \"\") => {\r\n    if (afterId) {\r\n      const afterIndex = schema.findIndex((formItem: FormControlType) => formItem.id === afterId);\r\n      schema.splice(afterIndex + 1, 0, { ...FormControlDefaultValue[type], id: v4() });\r\n      setSchema([...schema]);\r\n    } else setSchema([...schema, { ...FormControlDefaultValue[type], id: v4() }]);\r\n  };\r\n\r\n  const deleteFormItem = (id: string) => setSchema(schema.filter((item: FormControlType) => item.id !== id));\r\n\r\n  const editFormItem = (editingFormItem: FormControlType) => {\r\n    if (editingFormItem) {\r\n      const itemIndex = schema.findIndex((item) => item.id === editingFormItem.id);\r\n      schema[itemIndex] = editingFormItem;\r\n\r\n      setSchema([...schema]);\r\n    }\r\n  };\r\n\r\n  const onMove = (id: string, isUp?: boolean) => {\r\n    const index = schema.findIndex((item) => item.id === id);\r\n    const swappedIndex = isUp ? index - 1 : index + 1;\r\n\r\n    const tempItem = schema[swappedIndex];\r\n\r\n    if (tempItem) {\r\n      schema[swappedIndex] = schema[index];\r\n      schema[index] = tempItem;\r\n      setSchema([...schema]);\r\n    }\r\n  };\r\n\r\n  const downloadTemplate = () => {\r\n    const element = document.createElement(\"a\");\r\n    const textFile = new Blob([JSON.stringify(schema)], { type: \"text/json\" }); //pass data from localStorage API to blob\r\n    element.href = URL.createObjectURL(textFile);\r\n    element.download = \"formTemplates.json\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  };\r\n\r\n  return schema.length ? (\r\n    <>\r\n      <Row className=\"justify-content-between mb-3\">\r\n        <Col xs={4} lg={6}>\r\n          <h1>Edit</h1>\r\n        </Col>\r\n        <Col xs={4} lg={3} className=\"d-flex align-items-center justify-content-end\">\r\n          <Tooltip text=\"Download template\">\r\n            <Button variant=\"outline-info\" className=\"btn-control\" onClick={downloadTemplate}>\r\n              <Download height=\"100%\" />\r\n            </Button>\r\n          </Tooltip>\r\n        </Col>\r\n        <Col xs={4} lg={3} className=\"d-flex align-items-center justify-content-end\">\r\n          <Tooltip text=\"Save template\">\r\n            <Button variant=\"outline-info\" className=\"btn-control\" onClick={onSave}>\r\n              <Save height=\"100%\" />\r\n            </Button>\r\n          </Tooltip>\r\n        </Col>\r\n      </Row>\r\n      <Accordion flush={false} className=\"mb-2\">\r\n        {schema.map((formItem: FormControlType) => (\r\n          <ToolboxItem\r\n            key={`toolbox-${formItem.id}`}\r\n            addFormItem={addFormItem}\r\n            deleteFormItem={deleteFormItem}\r\n            editFormItem={editFormItem}\r\n            formItem={formItem}\r\n            onMove={onMove}\r\n          />\r\n        ))}\r\n      </Accordion>\r\n    </>\r\n  ) : (\r\n    <AddControlButton onAdd={addFormItem}> Add Items </AddControlButton>\r\n  );\r\n};\r\n\r\nexport default Toolbox;\r\n","import { FC, useState } from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport FormBuilderContext from \"../../shared/types/FormBuilderContext\";\r\nimport { FormControlType } from \"../../shared/types/FormControlType\";\r\nimport FormGenerator from \"../FormGenerator\";\r\nimport Toolbox from \"../Toolbox\";\r\n\r\nconst FormBuilder: FC<{ schema: FormControlType[]; onSave?: (schema: FormControlType[]) => void }> = ({\r\n  schema = [],\r\n  onSave\r\n}) => {\r\n  const [formSchema, setFormSchema] = useState<FormControlType[]>(schema);\r\n\r\n  const onSaveTemplate = () => onSave && onSave(formSchema);\r\n\r\n  return (\r\n    <FormBuilderContext.Provider value={{ schema: formSchema, setSchema: setFormSchema, onSave: onSaveTemplate }}>\r\n      <Row className=\"my-5 text-left\">\r\n        <Col md={4}>\r\n          <Toolbox />\r\n        </Col>\r\n        <Col md={8}>\r\n          <Card body>\r\n            <FormGenerator schema={formSchema} />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </FormBuilderContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FormBuilder;\r\n","import { FormControlType } from \"../types/FormControlType\";\r\n\r\nexport const parseTemplate = (templateStr = \"\"): FormControlType[] => {\r\n  try {\r\n    const formSchema = JSON.parse(templateStr) as FormControlType[];\r\n    return formSchema;\r\n  } catch (err: any) {\r\n    console.log(\"Cannot convert template with error: \", err);\r\n  }\r\n\r\n  return [];\r\n};\r\n","import FormGenerator from \"../containers/FormGenerator\";\r\nimport { FC, useState } from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\nimport { FormControlType } from \"../shared/types/FormControlType\";\r\nimport { parseTemplate } from \"../shared/utils/parseTemplate\";\r\n\r\nconst FormGeneratorSample: FC = () => {\r\n  const [schema, setSchema] = useState<FormControlType[]>([]);\r\n\r\n  const onUpload = () => {\r\n    const fileInput = document.createElement(\"input\");\r\n    fileInput.type = \"file\";\r\n    fileInput.style.display = \"none\";\r\n    fileInput.onchange = (e: any) => {\r\n      const file = e.target.files[0];\r\n      if (!file) {\r\n        return;\r\n      }\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (event: any) => {\r\n        var contents = event.target.result;\r\n        const formSchema = parseTemplate(contents);\r\n        formSchema?.length ? setSchema(formSchema) : alert(\"Please choose correct template!\");\r\n        document.body.removeChild(fileInput);\r\n      };\r\n      reader.readAsText(file);\r\n    };\r\n    document.body.appendChild(fileInput);\r\n    fileInput.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mb-4\">\r\n        <Col md={10}>\r\n          <h2>Form Generator</h2>\r\n        </Col>\r\n        <Col md={2}>\r\n          <Button variant=\"outline-success\" onClick={onUpload} className=\"w-100\">\r\n            Upload Template\r\n          </Button>\r\n        </Col>\r\n\r\n        <Col md={12} className=\"text-center\">\r\n          <hr />\r\n          <i> (Download form template from Form Builder and upload to test) </i>\r\n          <hr />\r\n        </Col>\r\n      </Row>\r\n      <FormGenerator\r\n        schema={schema}\r\n        className=\"my-4\"\r\n        onSubmit={(result: object) =>\r\n          alert(\"Thank for your submission! The result is:\\n\" + (result as any[]).map((r) => r.question + \": \" + r.answer).join(\"\\n\"))\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormGeneratorSample;\r\n","import FormBuilder from \"../containers/FormBuilder\";\r\nimport { useState } from \"react\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { ControlType, FormControlType, InputFieldType } from \"../shared/types/FormControlType\";\r\nimport FormGeneratorSample from \"./FormGeneratorSample\";\r\n\r\nconst Sample = () => {\r\n  const [isFormBuilder, toggleShowFormBuilder] = useState(true);\r\n\r\n  const data: FormControlType[] = [\r\n    {\r\n      controlType: ControlType.Input,\r\n      defaultValue: \"\",\r\n      disabled: false,\r\n      label: \"Input Field\",\r\n      placeholder: \"Placeholder\",\r\n      id: \"d9d4e1b9-8760-4aaa-81be-041333cbf0e3\"\r\n    },\r\n    {\r\n      controlType: ControlType.Section,\r\n      children: [\r\n        {\r\n          controlType: ControlType.Checkbox,\r\n          defaultValue: \"\",\r\n          disabled: false,\r\n          label: \"Checkbox Field\",\r\n          placeholder: \"\",\r\n          id: \"166836d1-14f2-4a9e-99e4-2acb16bc10aa\",\r\n          values: [\"One\", \"Two\", \"Three\"]\r\n        },\r\n        {\r\n          controlType: ControlType.Radio,\r\n          values: [\"One\", \"Two\", \"Three\"],\r\n          disabled: false,\r\n          label: \"Radio Field\",\r\n          id: \"38771b38-86b8-474a-8251-b94268df81e6\"\r\n        },\r\n        {\r\n          controlType: ControlType.TextArea,\r\n          value: \"\",\r\n          values: [],\r\n          disabled: false,\r\n          label: \"Area Field\",\r\n          id: \"4e6ad7ab-d286-4504-890f-e4ca56ec6c39\",\r\n          defaultValue: \"Hello world!\"\r\n        },\r\n        {\r\n          controlType: ControlType.Select,\r\n          values: [\"One\", \"Two\", \"Three\"],\r\n          disabled: false,\r\n          label: \"Select Field\",\r\n          id: \"b5027731-e808-47c2-a7d1-871cac6c9fc4\"\r\n        }\r\n      ],\r\n      label: \"Section\",\r\n      bordered: false,\r\n      id: \"9d13cfe5-e145-4d74-b73f-993004fbc8e4\",\r\n      columns: 2\r\n    },\r\n    {\r\n      controlType: ControlType.Section,\r\n      children: [\r\n        {\r\n          controlType: ControlType.Input,\r\n          defaultValue: \"\",\r\n          disabled: false,\r\n          label: \"Datetime\",\r\n          placeholder: \"\",\r\n          id: \"e306440b-2864-4561-b514-3b02173b2dbf\",\r\n          type: InputFieldType.datetime\r\n        },\r\n        {\r\n          controlType: ControlType.Input,\r\n          defaultValue: \"\",\r\n          disabled: false,\r\n          label: \"Date\",\r\n          placeholder: \"\",\r\n          id: \"40e9107e-b0ea-4193-aef9-952e9def8f1b\",\r\n          type: InputFieldType.date\r\n        },\r\n        {\r\n          controlType: ControlType.Input,\r\n          defaultValue: \"\",\r\n          disabled: false,\r\n          label: \"Time\",\r\n          placeholder: \"\",\r\n          id: \"fafeb28f-a1f0-4cc7-acdf-a7ad798477af\",\r\n          type: InputFieldType.time\r\n        },\r\n        {\r\n          controlType: ControlType.Input,\r\n          defaultValue: \"dongntuyen\",\r\n          disabled: false,\r\n          label: \"Secure\",\r\n          placeholder: \"Password\",\r\n          id: \"e9befa72-bb25-4920-8f73-1868a9c9752b\",\r\n          type: InputFieldType.password\r\n        },\r\n        {\r\n          controlType: ControlType.Input,\r\n          defaultValue: \"111\",\r\n          disabled: true,\r\n          label: \"Number\",\r\n          placeholder: \"\",\r\n          id: \"baf7756f-a9e2-4fa3-9635-66fae54634cd\",\r\n          type: InputFieldType.number\r\n        }\r\n      ],\r\n      label: \"Section with Border\",\r\n      bordered: true,\r\n      id: \"726b4e49-d176-4297-83ca-0be026a66980\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n          <h1 className=\"text-center my-3\"> Demo Form Machine </h1>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n          <Button size=\"lg\" onClick={() => toggleShowFormBuilder(!isFormBuilder)} className=\"w-100 my-3\">\r\n            Show {isFormBuilder ? \"Form Generator\" : \"Form Builder\"}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {isFormBuilder ? (\r\n        <FormBuilder\r\n          schema={data}\r\n          onSave={(template: object) => {\r\n            alert(\"Templates was saved! Check console!\");\r\n            console.log(template);\r\n          }}\r\n        />\r\n      ) : (\r\n        <FormGeneratorSample />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sample;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Sample from \"./samples/Sample\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Sample />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nexport { default as FormBuilder } from \"./containers/FormBuilder\";\nexport { default as FormGenerator } from \"./containers/FormGenerator\";\nexport type { FormControlType, ControlType } from \"./shared/types/FormControlType\";\nexport { parseTemplate } from \"./shared/utils/parseTemplate\";\n"],"sourceRoot":""}